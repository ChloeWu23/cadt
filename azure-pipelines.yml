trigger:
  - docker2
stages:
  - stage: Builddev
    displayName: Build Dev image
    jobs:
      - job: Buildjob
        displayName: Build-dev
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self  
            displayName: 'Checkout code'
          #- script: git fetch --all
            #displayName: 'Fetch all branches and tags'
          #- script: git log --oneline -n 10
            #displayName: 'List recent commits'
          - script: git checkout dd2509e6984e7b246a04bb889cc146338bc8f83d 
            displayName: 'Checkout to specific commit dd2509e6'
            
          - task: Bash@3
            name: "ADO_variables"
            inputs:
              targetType: "inline"
              script: |
                tagvalue="$(sed 's/.*"version": "\(.*\)".*/\1/;t;d' ./package.json)"
                echo "Setting variable code_version"
                echo "##vso[task.setvariable variable=code_version]$tagvalue"
                echo "##vso[task.setvariable variable=code_version_out;isOutput=true]$tagvalue"
                echo $code_version_out
                echo $code_version
          - task: DownloadSecureFile@1
            name: secureConfig
            inputs:
              secureFile: 'config.yaml'
          - script: cp $(secureConfig.secureFilePath) ./config.yaml
            displayName: 'Copy secure config to current directory'
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                ls 
                pwd
                cd /
                pwd
                ls
          - task: Docker@2
            inputs:
              containerRegistry: "sandboxcadtACRdev"
              repository: "cadt-api-develop"
              command: "buildAndPush"
              Dockerfile: "$(System.DefaultWorkingDirectory)/Dockerfile"
              tags: $(code_version)_$(Build.BuildId)

  - stage: Deploydev
    displayName: Deploy Dev Application
    jobs:
      - job: DeployInstance1
        displayName: Deploy Application in Cluster
        variables:
          - name: code_version_out
            value: $[ stageDependencies.Builddev.Buildjob.outputs['ADO_variables.code_version_out'] ]
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: "echo $(code_version_out)"
          - task: HelmInstaller@0
            inputs:
              helmVersion: "3.9.0"
              installKubectl: true
          - task: HelmDeploy@0
            inputs:
              azureSubscription: "sandbox-cadt-dev-northeurope-rg-master"
              azureResourceGroup: "sandbox-cadt-dev-northeurope-rg-master"
              kubernetesCluster: "sandbox-cadt-aks-dev-master"
              namespace: "develop"
              command: "upgrade"
              chartType: "FilePath"
              chartPath: "cadt-backend-helm"
              chartVersion: "1.0"
              releaseName: "cadt-api-instance1"
              valueFile: "cadt-backend-helm/values.yaml"
              waitForExecution: true
              arguments: "--set image.tag=$(code_version_out)_$(Build.BuildId)"
